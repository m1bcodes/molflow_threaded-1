# use the official gcc image, based on debian
# can use verions as well, like gcc:5.2
# see https://hub.docker.com/_/gcc/
image: ubuntu:18.04

build:
  stage: build
  # instead of calling g++ directly you can also use some build toolkit like make
  # install the necessary build tools when needed
  # before_script: 
  #   - apt update && apt -y install make autoconf 
  script: 
    - apt update
    - apt install -y git cmake g++-8 g++ libpng-dev libsdl2-dev libgsl-dev libcurl4-gnutls-dev gtk+-3.0
    - cd CMake
    - cmake .
    - make
  artifacts:
    paths:
      - bin
  # depending on your build setup it's most likely a good idea to cache outputs to reduce the build time
  # cache:
  #   paths:
  #     - "*.o"

# run tests using the binary built before
#test:
#  stage: test
#  script:
#    - ./runmytests.sh
